joint_state_controller:
  type: "joint_state_controller/JointStateController"
  publish_rate: 50


bot_velocity_controller:
  type: "diff_drive_controller/DiffDriveController"
  left_wheel: ['LFW_joint', 'LBW_joint']
  right_wheel: ['RFW_joint', 'RBW_joint']
  publish_rate: 50
  pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 0.03]
  twist_covariance_diagonal: [0.001, 0.001, 0.001, 1000000.0, 1000000.0, 0.03]
  cmd_vel_timeout: 0.25

  

  # Odometry fused with IMU is published by robot_localization, so
  # no need to publish a TF based on encoders alone.
  enable_odom_tf: false

    
  # Wheel separation and radius multipliers
  wheel_separation_multiplier: 0.267 # default: 1.0
  wheel_radius_multiplier    : 0.065 # default: 1.0


  # Velocity and acceleration limits
  # Whenever a min_* is unspecified, default to -max_*
  linear:
    x:
      has_velocity_limits    : true
      max_velocity           : 0.7   # m/s
      has_acceleration_limits: true
      max_acceleration       : 0.2   # m/s^2
  angular:
    z:
      has_velocity_limits    : true
      max_velocity           : 1.0   # rad/s
      has_acceleration_limits: true
      max_acceleration       : 1   # rad/s^2
      
jointRF_velocity_controller:
  type: velocity_controllers/JointVelocityController
  joint: RFW_joint
  pid: {p: 10.0, i: 0.01, d: 5.0}
jointLF_velocity_controller:
  type: velocity_controllers/JointVelocityController
  joint: LFW_joint
  pid: {p: 100.0, i: 0.01, d: 5.0}
jointRB_velocity_controller:
  type: velocity_controllers/JointVelocityController
  joint: RBW_joint
  pid: {p: 100.0, i: 0.01, d: 5.0}
jointLB_velocity_controller:
  type: velocity_controllers/JointVelocityController
  joint: LBW_joint
  pid: {p: 10.0, i: 0.01, d: 5.0}
